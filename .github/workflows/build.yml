name: Build DPT Shell

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ANDROID_NDK_VERSION: r25c
  ANDROID_NDK_HOME: ${{ github.workspace }}/android-ndk-r25c
  NDK_CACHE_DIR: ${{ github.workspace }}/.ndk-cache
  BUILD_CACHE_DIR: ${{ github.workspace }}/.build-cache
  ABIS: armeabi-v7a,arm64-v8a

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache NDK
        uses: actions/cache@v3
        id: ndk-cache
        with:
          path: ${{ env.NDK_CACHE_DIR }}
          key: ndk-${{ env.ANDROID_NDK_VERSION }}

      - name: Setup Android NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p $NDK_CACHE_DIR
          wget https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux.zip
          unzip -q android-ndk-${ANDROID_NDK_VERSION}-linux.zip -d $NDK_CACHE_DIR
          mv $NDK_CACHE_DIR/android-ndk-${ANDROID_NDK_VERSION} $ANDROID_NDK_HOME

      - name: Cache CMake build
        uses: actions/cache@v3
        id: build-cache
        with:
          path: ${{ env.BUILD_CACHE_DIR }}/build-${{ matrix.abi }}
          key: build-${{ matrix.abi }}-${{ github.sha }}
          restore-keys: |
            build-${{ matrix.abi }}-

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake ninja-build build-essential wget unzip

      - name: Configure and build
        working-directory: shell/src/main/cpp
        run: |
          mkdir -p build-${{ matrix.abi }}
          cd build-${{ matrix.abi }}
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_PLATFORM=android-21 \
            -DCMAKE_BUILD_TYPE=Release \
            -B. \
            -G Ninja
          ninja dpt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dpt-${{ matrix.abi }}
          path: shell/src/main/cpp/build-${{ matrix.abi }}/libdpt.so
