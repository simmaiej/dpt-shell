name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_NDK_VERSION: r25c
      ANDROID_NDK_HOME: ${{ runner.temp }}/android-ndk-r25c

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Cache NDK
      - name: Cache NDK
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/android-ndk-r25c
          key: ndk-${{ env.ANDROID_NDK_VERSION }}

      # Download NDK if cache missed
      - name: Setup NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: |
          wget https://dl.google.com/android/repository/android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux.zip
          unzip -q android-ndk-${{ env.ANDROID_NDK_VERSION }}-linux.zip -d ${{ runner.temp }}

      # Cache build output
      - name: Cache CMake build
        uses: actions/cache@v3
        with:
          path: build
          key: cmake-${{ github.sha }}

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake ninja-build

      - name: Configure CMake
        run: |
          mkdir -p build && cd build
          cmake .. -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake \
                   -DANDROID_ABI=armeabi-v7a \
                   -DANDROID_PLATFORM=android-21

      - name: Build armeabi-v7a
        run: cmake --build build --target dpt -- -j$(nproc)

      - name: Build arm64-v8a
        run: |
          mkdir -p build-arm64 && cd build-arm64
          cmake .. -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake \
                   -DANDROID_ABI=arm64-v8a \
                   -DANDROID_PLATFORM=android-21
          cmake --build . --target dpt -- -j$(nproc)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dpt-libs
          path: |
            build/libdpt.so
            build-arm64/libdpt.so
